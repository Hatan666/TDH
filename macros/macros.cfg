#textdomain wesnoth-TDH

#define 12_TURNS_NOTE
    [note]
        description= _ "The schedule is 12 turns."
    [/note]
#enddef

#define CAPTURE_VILLAGE SIDE X Y
    # Syntactic shortcut to capture particular villages.
    [capture_village]
        side={SIDE}
        x={X}
        y={Y}
    [/capture_village]
#enddef

#define GENERIC_GUARD_UNIT SIDE TYPE X Y
    # Creates generic unit of TYPE belonging to SIDE at X,Y, which has
    # random name, gender, traits and the guardian ai special.
    [unit]
        side={SIDE}
        type={TYPE}
        x={X}
        y={Y}
        generate_name=yes
        random_traits=yes
        random_gender=yes
        ai_special=guardian
        upkeep=full
    [/unit]
#enddef

#define LOYAL_GUARD_UNIT SIDE TYPE X Y
    # Creates loyal unit of TYPE belonging to SIDE at X,Y, which has
    # random name, gender, traits and the guardian ai special.
    [unit]
        side={SIDE}
        type={TYPE}
        x={X}
        y={Y}
        generate_name=yes
        random_traits=yes
        random_gender=yes
        ai_special=guardian
        upkeep=loyal
    [/unit]
#enddef

#define ANIMATE
    [+unit]
        animate=yes
    [/unit]
#enddef

#define SOUND_SOURCE ID X Y SNDLIST TIMEOUT TRIGGER_CHANCE_P_VAL
    [sound_source]
        id={ID}
        x={X}
        y={Y}
        sounds={SNDLIST}
        delay={TIMEOUT}
        chance={TRIGGER_CHANCE_P_VAL}
    [/sound_source]
#enddef

#define CONTINUOUS_SOUND_SOURCE ID X Y SNDLIST
    {SOUND_SOURCE ({ID}) ({X}) ({Y}) ({SNDLIST}) (0) (100)}
#enddef

#define SOUND_SOURCE_RANGE FULL FADE
    [+sound_source]
        full_range={FULL}
        fade_range={FADE}
    [/sound_source]
#enddef

#define FADE_SOUND_IN DURATION
    {VARIABLE fade_duration_remaining {DURATION}}
    [while]
        [variable]
            name=fade_duration_remaining
            greater_than=0
        [/variable]
        [do]
            {VARIABLE_OP fade_duration_remaining sub 100}
            {VARIABLE volume 100}
            {VARIABLE_OP volume multiply $fade_duration_remaining}
            {VARIABLE_OP volume divide {DURATION}}
            {VARIABLE volume "$(100-$volume)"}
            [volume]
                sound=$volume
            [/volume]
            [delay]
                time=250
            [/delay]
        [/do]
    [/while]
    {CLEAR_VARIABLE fade_duration_remaining,volume}
#enddef

#define RAIN
    [terrain_graphics]
        map="
1
,1
1
,1"
        [tile]
            pos=1
            set_flag=rain
            no_flag=rain
        [/tile]
        [image]
            layer=1
            name=rain-1.png~O(0.5):100,rain-2.png~O(0.5):100,rain-3.png~O(0.5):100,rain-4.png~O(0.5):100,rain-5.png~O(0.5):100
            random_start=yes
        [/image]
    [/terrain_graphics]
    [terrain_graphics]
        [tile]
            x=0
            y=0
            set_flag=rain
            no_flag=rain
        [/tile]
        [image]
            layer=1
            name=rain-1.png~O(0.5):100,rain-2.png~O(0.5):100,rain-3.pngv:100,rain-4.png~O(0.5):100,rain-5.png~O(0.5):100
            random_start=yes
        [/image]
    [/terrain_graphics]
    [sound_source]
        id=rain
        sounds=rain.ogg
        delay=0
        chance=100
        loop=-1
        x,y=1,1
        full_range=9999
        check_fogged=no
        check_shrouded=no
    [/sound_source]
#enddef
